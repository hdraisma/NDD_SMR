# Streamlit Home


# Module load in
# 
# 
import streamlit as st
import pandas as pd
import gspread 
from gspread_pandas import Spread, Client
# 
# from google.oauth2.service_account import Credentials   #<-- Commented this line as at 2023-11-07 17:22GMT (HD); also, this line apparently equal to that as in "https://discuss.streamlit.io/t/solved-issue-of-pulling-private-google-sheet-into-a-streamlit-app-using-gspread-instead-of-gsheetsdb/39056".
# 
from PIL import Image


if 'client_auth' not in st.session_state: # create session state variable for client auth 
        st.session_state['client_auth'] = None
        # 
        # 
# Load in main df and keep in cache to mitigate reloading on every page
# 
if 'main_data' not in st.session_state: # create session state
        st.session_state['main_data'] = pd.DataFrame()


### START Code commented as at 2023-11-07 17:36GMT (HD) and/as it is equal [or,
### following "@st.cache_data(", almost equal -- or a direct consequence thereof] to that as on
### "https://discuss.streamlit.io/t/solved-issue-of-pulling-private-google-sheet-into-a-streamlit-app-using-gspread-instead-of-gsheetsdb/39056"
### and hence apparently for the purpose of "pull[ing] data from a private
### google worksheet [] into a streamlit app".
# 
# 
# scopes = ["https://www.googleapis.com/auth/spreadsheets",]
# 
# skey = st.secrets["gcp_service_account"]
# credentials = Credentials.from_service_account_info(
#     skey,
#     scopes=scopes,
# )
# client = gspread.authorize(credentials)
# 
# 
# # Add auth keys to session state
# 
# st.session_state['client_auth'] = client   #I.e. commented as 'direct consequence of code equal to that as in mentioned "discuss.streamlit.io" post' -- HD as at 2023-11-07 17:59GMT.
# 
# 
# @st.cache_data(show_spinner = False)
# 
# def load_data(url, sheet_name="Sheet"):
#     sh = client.open_by_url(url)
#     df = pd.DataFrame(sh.worksheet(sheet_name).get_all_records())
#     return df
# 
# 
# # Load in unfiltered associations   #<-- Commented this create_main() function
# definition below (HD as at 2023-11-07 18:01GMT) as direct consequence of code
# equal to that as in mentioned "discuss.streamlit.io" post.
# 
# def create_main():
#     df = load_data(st.secrets['simple_sig'])
# 
#     return df
# 
# 
### END Code commented as at 2023-11-07 17:36GMT (HD).
  

# Welcome message
# 
st.title("OmicSynth Functional NDD Gene Browser")
st.markdown("""Welcome to OmicSynth's Neurodegenerative Disorders functional analysis browser!
            This application allows you to browse SMR data from our manuscript and conduct customized analysis. 
            Please report any issues, provide feedback, or ask general questions to chelsea.alvarado@nih.gov / HD""" )


### START Code commented as at 2023-11-07 18:27GMT (HD) and/as it is a direct
### consequence of that as on
### "https://discuss.streamlit.io/t/solved-issue-of-pulling-private-google-sheet-into-a-streamlit-app-using-gspread-instead-of-gsheetsdb/39056"
### i.e. the create_main() function definition, and hence apparently for the
### purpose of "pull[ing] data from a private google worksheet [] into a
### streamlit app".
# 
# 
# with st.spinner('Loading in data ... only happens once :)'):
#     main_df = create_main()
#     st.session_state['main_data'] = main_df
#     st.success('Done!')
# 
# 
### END Code commented as at 2023-11-07 18:27GMT (HD).


### START Code commented as at 2023-11-07 18:35GMT (HD).
# 
# 
# # Add CARD logo
# # 
# card_img = Image.open('img/CARD-logo-white-print.png')   #As at 2023-11-07 18:33GMT (HD) causes error:
#   # --
#   2023-11-07 18:29:43.880 Uncaught app exception
# Traceback (most recent call last):
#   File "/home/hermanus.draisma/.virtualenvs/r-reticulate/lib64/python3.6/site-packages/streamlit/scriptrunner/script_runner.py", line 554, in _run_script
#     exec(code, module.__dict__)
#   File "/home/hermanus.draisma/SOFTWARE/omicsynthcustomanalysis/NDD_SMR/Home.py", line 94, in <module>
#     card_img = Image.open('img/CARD-logo-white-print.png')
#   File "/home/hermanus.draisma/.virtualenvs/r-reticulate/lib64/python3.6/site-packages/PIL/Image.py", line 2975, in open
#     fp = builtins.open(filename, "rb")
# FileNotFoundError: [Errno 2] No such file or directory: 'img/CARD-logo-white-print.png'
#   # --
#   # ... but I don't deem this to be important ==> commented out this code 'block'
#   # 
# dti_img = Image.open('img/dti_img.jpeg')
# 
# 
# 
# card_img = Image.open('/home/hermanus.draisma/SOFTWARE/omicsynthcustomanalysis/NDD_SMR/img/CARD-logo-white-print.png')   #<-- This line 'new' code as at 2023-11-08 14:42GMT (HD). Commented this line as at 2023-11-17 18:26GMT (HD); this line would be for use on RStudio Workbench.
# 
card_img = Image.open('/media/hammie/My Passport/SOFTWARE/omicsynthcustomanalysis/NDD_SMR/img/CARD-logo-white-print.png')   #<-- This line 'new' code as at 2023-11-17 18:26GMT (HD); this line would be for use in RStudio Desktop as on Brutus.
# 
# 
# dti_img = Image.open('/home/hermanus.draisma/SOFTWARE/omicsynthcustomanalysis/NDD_SMR/img/dti_img.jpeg')   #<-- This line 'new' code as at 2023-11-08 14:46GMT (HD). Commented this line as at 2023-11-17 18:29GMT (HD); this line would be for use on RStudio Workbench.
# 
dti_img = Image.open('/media/hammie/My Passport/SOFTWARE/omicsynthcustomanalysis/NDD_SMR/img/dti_img.jpeg')   #<-- This line 'new' code as at 2023-11-17 18:30GMT (HD); this line would be for use in RStudio Desktop as on Brutus.
# 
# 
# 
st.sidebar.image(card_img)   #<-- Uncommented this line as at 2023-11-08 14:43GMT (HD).
# 
st.sidebar.image(dti_img)   #<-- Uncommented this line as at 2023-11-08 14:46GMT (HD).
# 
# 
### END Code commented as at 2023-11-07 18:35GMT (HD).


# END OF FILE.
